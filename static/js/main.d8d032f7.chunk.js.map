{"version":3,"sources":["components/Legend.js","components/Cell.js","data/picks.js","components/Row.js","data/lines.js","components/TeamTable.js","components/Results.js","components/Picks.js","App.js","index.js"],"names":["Legend","Accordion","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","className","style","margin","verticalAlign","Cell","team","line","pick","wins","gamesPlayed","projectedWins","Math","round","projWin","backgroundColor","projLoss","lockWin","lockLoss","applyHighlighting","PICKS","Row","players","logo","src","width","height","alt","map","player","i","key","name","LINES","TeamTable","teams","Table","responsive","id","Results","score","diff","calcPoints","results","sort","a","b","striped","bordered","hover","size","result","Picks","state","loaded","fetch","then","response","json","teamData","sports","leagues","push","abbreviation","record","items","stats","value","logos","href","setState","catch","error","alert","this","padding","textDecoration","Spinner","animation","role","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8d032f7.chunk.js","sourcesContent":["import React from 'react';\nimport Card  from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\n\nconst Legend = () => {\n    return(\n        <Accordion>\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        <h4>Legend</h4>\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <div className=\"container\">\n                            <div className=\"row\" style={{margin: '2px 150px 20px 150px'}}>\n                            <div className=\"col-sm projWin\"><span style={{verticalAlign: 'middle'}}>Projected Win</span></div>\n                            <div className=\"col-sm projLoss\"><span style={{verticalAlign: 'middle'}}>Projected Loss</span></div>\n                            <div className=\"col-sm win\"><span style={{verticalAlign: 'middle'}}>Win</span></div>\n                            <div className=\"col-sm loss\"><div>Loss</div></div>\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>  \n    )\n}\n\nexport default Legend;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cell = ( { team, line, pick }) => {\n    const { wins, gamesPlayed } = team;\n    const projectedWins = Math.round( 82 * wins / gamesPlayed );\n\n    const applyHighlighting = ( pick ) => {\n        const projWin = { backgroundColor: 'rgba(0, 255, 0, 0.1)' };\n        const projLoss = { backgroundColor: 'rgba(255, 0, 0, 0.1)' };\n        const lockWin = { backgroundColor: 'rgba(0, 255, 0, 0.4)' };\n        const lockLoss = { backgroundColor: 'rgba(255, 0, 0, 0.4)' };\n        if( wins > line ) { return pick === 'O' ? lockWin : lockLoss }\n        if( wins + ( 82 - gamesPlayed ) < line ) { return pick ==='U' ? lockWin : lockLoss }\n        if( projectedWins > line ) { return pick === 'O' ? projWin : projLoss }\n        if (projectedWins < line ) { return pick === 'U' ? projWin : projLoss }\n    }\n    \n    return(\n        <td style={ applyHighlighting( pick ) }>{ pick }</td>\n    );\n}\n\nCell.propTypes = {\n    team: PropTypes.object.isRequired,\n    line: PropTypes.number.isRequired,\n    pick: PropTypes.string.isRequired\n}\n\nexport default Cell;","const PICKS = {\n     'AD': {\n            'ATL': 'U',\n            'BOS': 'O',\n            'BKN': 'O',\n            'CHA': 'U',\n            'CHI': 'O',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'O',\n            'DET': 'O',\n            'GS': 'U',\n            'HOU': 'O',\n            'IND': 'U',\n            'LAC': 'O',\n            'LAL': 'O',\n            'MEM': 'U',\n            'MIA': 'O',\n            'MIL': 'O',\n            'MIN': 'O',\n            'NO': 'U',\n            'NY': 'O',\n            'OKC': 'O',\n            'ORL': 'O',\n            'PHI': 'O',\n            'PHX': 'U',\n            'POR': 'U',\n            'SAC': 'O',\n            'SA': 'U',\n            'TOR': 'U',\n            'UTAH': 'U',\n            'WSH': 'U',\n            'locks': ['CHA', 'MEM', 'WSH']\n        },\n        'JR': {\n            'ATL': 'O',\n            'BOS': 'U',\n            'BKN': 'O',\n            'CHA': 'U',\n            'CHI': 'O',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'O',\n            'DET': 'O',\n            'GS': 'U',\n            'HOU': 'O',\n            'IND': 'U',\n            'LAC': 'O',\n            'LAL': 'O',\n            'MEM': 'U',\n            'MIA': 'O',\n            'MIL': 'O',\n            'MIN': 'O',\n            'NO': 'U',\n            'NY': 'U',\n            'OKC': 'U',\n            'ORL': 'U',\n            'PHI': 'O',\n            'PHX': 'U',\n            'POR': 'O',\n            'SAC': 'O',\n            'SA': 'O',\n            'TOR': 'O',\n            'UTAH': 'O',\n            'WSH': 'U',\n            'locks': ['BKN', 'MIA', 'PHI']\n        },\n        'JT': {\n            'ATL': 'O',\n            'BOS': 'U',\n            'BKN': 'U',\n            'CHA': 'U',\n            'CHI': 'O',\n            'CLE': 'U',\n            'DAL': 'O',\n            'DEN': 'O',\n            'DET': 'O',\n            'GS': 'O',\n            'HOU': 'O',\n            'IND': 'O',\n            'LAC': 'O',\n            'LAL': 'O',\n            'MEM': 'U',\n            'MIA': 'O',\n            'MIL': 'O',\n            'MIN': 'O',\n            'NO': 'U',\n            'NY': 'U',\n            'OKC': 'O',\n            'ORL': 'O',\n            'PHI': 'O',\n            'PHX': 'O',\n            'POR': 'U',\n            'SAC': 'U',\n            'SA': 'U',\n            'TOR': 'U',\n            'UTAH': 'U',\n            'WSH': 'U',\n            'locks': ['DEN', 'LAC', 'WSH']\n        },\n        'MM': {\n            'ATL': 'U',\n            'BOS': 'U',\n            'BKN': 'O',\n            'CHA': 'U',\n            'CHI': 'U',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'O',\n            'DET': 'O',\n            'GS': 'O',\n            'HOU': 'O',\n            'IND': 'U',\n            'LAC': 'U',\n            'LAL': 'U',\n            'MEM': 'O',\n            'MIA': 'O',\n            'MIL': 'O',\n            'MIN': 'U',\n            'NO': 'U',\n            'NY': 'U',\n            'OKC': 'O',\n            'ORL': 'U',\n            'PHI': 'O',\n            'PHX': 'U',\n            'POR': 'U',\n            'SAC': 'U',\n            'SA': 'O',\n            'TOR': 'O',\n            'UTAH': 'O',\n            'WSH': 'U',\n            'locks': ['IND', 'POR', 'TOR']\n        },\n        'JF': {\n            'ATL': 'U',\n            'BOS': 'U',\n            'BKN': 'O',\n            'CHA': 'U',\n            'CHI': 'O',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'U',\n            'DET': 'O',\n            'GS': 'U',\n            'HOU': 'O',\n            'IND': 'U',\n            'LAC': 'O',\n            'LAL': 'O',\n            'MEM': 'O',\n            'MIA': 'O',\n            'MIL': 'U',\n            'MIN': 'U',\n            'NO': 'U',\n            'NY': 'U',\n            'OKC': 'O',\n            'ORL': 'O',\n            'PHI': 'O',\n            'PHX': 'O',\n            'POR': 'U',\n            'SAC': 'O',\n            'SA': 'U',\n            'TOR': 'O',\n            'UTAH': 'O',\n            'WSH': 'U',\n            'locks': ['DET', 'MIA', 'MIN']\n        },\n        'TK': {\n            'ATL': 'O',\n            'BOS': 'U',\n            'BKN': 'U',\n            'CHA': 'U',\n            'CHI': 'U',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'U',\n            'DET': 'O',\n            'GS': 'U',\n            'HOU': 'U',\n            'IND': 'U',\n            'LAC': 'U',\n            'LAL': 'O',\n            'MEM': 'U',\n            'MIA': 'O',\n            'MIL': 'O',\n            'MIN': 'U',\n            'NO': 'U',\n            'NY': 'O',\n            'OKC': 'U',\n            'ORL': 'U',\n            'PHI': 'U',\n            'PHX': 'O',\n            'POR': 'U',\n            'SAC': 'U',\n            'SA': 'U',\n            'TOR': 'U',\n            'UTAH': 'U',\n            'WSH': 'O',\n            'locks': ['MIN', 'POR', 'TOR']\n        },\n        'JW': {\n            'ATL': 'U',\n            'BOS': 'U',\n            'BKN': 'O',\n            'CHA': 'O',\n            'CHI': 'U',\n            'CLE': 'U',\n            'DAL': 'U',\n            'DEN': 'U',\n            'DET': 'O',\n            'GS': 'U',\n            'HOU': 'O',\n            'IND': 'U',\n            'LAC': 'O',\n            'LAL': 'U',\n            'MEM': 'U',\n            'MIA': 'U',\n            'MIL': 'U',\n            'MIN': 'O',\n            'NO': 'U',\n            'NY': 'O',\n            'OKC': 'O',\n            'ORL': 'U',\n            'PHI': 'U',\n            'PHX': 'O',\n            'POR': 'U',\n            'SAC': 'U',\n            'SA': 'U',\n            'TOR': 'U',\n            'UTAH': 'U',\n            'WSH': 'O',\n            'locks': ['BOS', 'IND', 'PHI']\n        },\n        'ZN': {\n            'ATL': 'O',\n            'BOS': 'U',\n            'BKN': 'U',\n            'CHA': 'O',\n            'CHI': 'O',\n            'CLE': 'U',\n            'DAL': 'O',\n            'DEN': 'U',\n            'DET': 'U',\n            'GS': 'O',\n            'HOU': 'O',\n            'IND': 'O',\n            'LAC': 'O',\n            'LAL': 'O',\n            'MEM': 'O',\n            'MIA': 'U',\n            'MIL': 'U',\n            'MIN': 'O',\n            'NO': 'O',\n            'NY': 'O',\n            'OKC': 'O',\n            'ORL': 'U',\n            'PHI': 'U',\n            'PHX': 'O',\n            'POR': 'U',\n            'SAC': 'U',\n            'SA': 'U',\n            'TOR': 'O',\n            'UTAH': 'U',\n            'WSH': 'O',\n            'locks': ['CHI', 'HOU', 'SA']\n        }\n}\n\n\nexport default PICKS;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Cell from './Cell';\nimport PICKS from '../data/picks';\n\nconst Row = ( { team, line, players } ) => {\n    const { logo, wins, gamesPlayed } = team;\n    const projectedWins = Math.round( 82 * wins / gamesPlayed );\n\n    return(\n        <tr>\n            <td><img src={ logo } style={ { width: '30px', height: '30px'} } alt={ team.team }/></td>\n            <td>{ team.team }</td>\n            <td>{ line }</td>\n            <td>{ wins }</td>\n            <td> { projectedWins }</td>\n            { players.map( ( player, i ) =>  {\n                return(\n                    <Cell \n                        key={ `${team}-${i}`}\n                        team={ team }\n                        line={ line }\n                        pick={ PICKS[player.name][team.team] }    \n                    />);    \n            })}\n        </tr>\n    )\n}\n\nRow.propTypes = {\n    team: PropTypes.object.isRequired,\n    line: PropTypes.number.isRequired,\n    players: PropTypes.array.isRequired\n}\n\nexport default Row;","const LINES = {\n    'ATL': 33.5,\n    'BOS': 48.5,\n    'BKN': 43.5,\n    'CHA': 23.5,\n    'CHI': 32.5,\n    'CLE': 24.5,\n    'DAL': 40.5,\n    'DEN': 52.5,\n    'DET': 37.5,\n    'GS': 47.5,\n    'HOU': 53.5,\n    'IND': 46.5,\n    'LAC': 53.5,\n    'LAL': 50.5,\n    'MEM': 27.5,\n    'MIA': 43.5,\n    'MIL': 57.5,\n    'MIN': 35.5,\n    'NO': 39.5,\n    'NY': 26.5,\n    'OKC': 31.5,\n    'ORL': 41.5,\n    'PHI': 54.5,\n    'PHX': 28.5,\n    'POR': 46.5,\n    'SAC': 37.5,\n    'SA': 46.5,\n    'TOR': 46.5,\n    'UTAH': 53.5,\n    'WSH': 26.5,\n}\n\nexport default LINES;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from 'react-bootstrap/Table';\nimport Row from './Row';\nimport LINES from '../data/lines';\n\nconst TeamTable = ( { teams, players } ) => {\n    return(\n        <Table responsive>\n            <thead>\n                <tr>\n                    <th>Logo</th>\n                    <th>Team</th>\n                    <th>Line</th>\n                    <th>Wins</th>\n                    <th>Projected</th>\n                    <th>AD</th>\n                    <th>JR</th>\n                    <th>JT</th>\n                    <th>MM</th>\n                    <th>JF</th>\n                    <th>TK</th>\n                    <th>JW</th>\n                    <th>ZN</th>\n                </tr>\n            </thead>\n            <tbody>\n                { teams.map( team => {\n                    return(\n                        <Row \n                            key={ team.id }    \n                            team={ team }\n                            line={ LINES[team.team] }\n                            players={ players }\n                        />\n                    )\n                })}\n            </tbody>\n        </Table>\n    );\n}\n\nTeamTable.propTypes = {\n    teams: PropTypes.array.isRequired,\n    players: PropTypes.array.isRequired\n}\n\n\nexport default TeamTable;","import React from 'react';\nimport LINES from '../data/lines';\nimport PICKS from '../data/picks';\nimport Table from 'react-bootstrap/Table';\nimport Card  from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\n\nconst Results = ( { teams, players }) => {\n\n    const calcPoints = ( team, pick ) => {\n        const diff = Math.round( 82 * team.wins / team.gamesPlayed ) - LINES[team.team];\n        if (diff === 0 ) { return 0 }\n        return ((diff > 0 && pick === 'O') || (diff < 0 && pick === 'U')) ? diff : (-1 * diff);\n    }\n    \n    players.map( player => {\n        player.score = 0;\n        teams.map( team => {\n            return player.score += calcPoints( team, PICKS[player.name][team.team])\n        });\n        return players;\n    })\n\n    // sort the results\n    let results = [];\n    results = players.sort(( a, b ) => (a.score > b.score) ? -1 : (a.score === b.score) ? 0 : 1 );\n\n    return(\n\n        <Accordion>\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        <h4>Current Standings</h4>\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <Table striped bordered hover size=\"sm\">\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Name</th>\n                                    <th>Points</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {results.map( (result, i) => {\n                                    return(\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td>{ result.name }</td>\n                                            <td>{ result.score }</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </Table>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>\n    )\n}\n\nexport default Results;","import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Legend from './Legend';\nimport TeamTable from './TeamTable';\nimport Results from './Results';\n\nclass Picks extends Component {\n    state = {\n        teams: [],\n        loaded: false\n    };\n\n    componentDidMount() {\n        fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams?limit=30')\n        .then( response => response.json() )\n        .then( json => {\n            const teamData = json.sports[0].leagues[0].teams;\n            let teams = [];\n            teamData.map( ( team, i ) => {\n                return(\n                    teams.push( {\n                    id: i,\n                    team: team.team.abbreviation,\n                    wins: team.team.record.items[0].stats[1].value,\n                    gamesPlayed: team.team.record.items[0].stats[8].value,\n                    logo: team.team.logos[0].href\n                } )\n                );\n            } );\n            this.setState( { teams, loaded: true } );\n        } )\n        .catch( error => {\n            alert( 'Error: ', error )\n        });\n    }\n\n    render(){\n        const { teams, loaded } = this.state;\n        const players = [\n            {\n                name: 'AD',\n            },\n            {\n                name: 'JR',\n            },\n            {\n                name: 'JT',\n            },\n            {\n                name: 'MM',\n            },\n            {\n                name: 'JF',\n            },\n            {\n                name: 'TK',\n            },\n            {\n                name: 'JW',\n            },\n            {\n                name: 'ZN',\n            }\n        ];\n\n        if( loaded ){\n            return(\n                <div style={{padding: '10px'}}>\n                    <h2 style={{padding: '10px', textDecoration: 'underline'}}>NBA Picks</h2>\n                    <Legend />\n                    <Results\n                        teams={ teams }\n                        players={ players }\n                    />\n                    <TeamTable teams={ teams } players={ players }/>\n                </div>   \n            )\n        } else {\n            return(\n                <div>\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Picks;","import React from 'react';\nimport './App.css';\nimport Picks from './components/Picks';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Picks />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}