{"version":3,"sources":["data/picks.js","components/Row.js","data/lines.js","components/TeamTable.js","components/Legend.js","components/Picks.js","App.js","index.js"],"names":["PICKS","Row","team","line","logo","wins","gamesPlayed","projectedWins","Math","round","src","style","width","height","alt","pick","projWin","backgroundColor","projLoss","lockWin","lockLoss","applyHighlighting","LINES","TeamTable","teams","Table","responsive","map","key","id","Legend","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","className","margin","verticalAlign","Picks","state","loaded","fetch","then","response","json","teamData","sports","leagues","i","push","abbreviation","record","items","stats","value","logos","href","setState","catch","error","alert","this","console","log","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1937ab8a.chunk.js","sourcesContent":["const PICKS = {\n     'AD': {\n            'ATL': 'UNDER',\n            'BOS': 'OVER',\n            'BKN': 'OVER',\n            'CHA': 'UNDER',\n            'CHI': 'OVER',\n            'CLE': 'UNDER',\n            'DAL': 'UNDER',\n            'DEN': 'OVER',\n            'DET': 'OVER',\n            'GS': 'UNDER',\n            'HOU': 'OVER',\n            'IND': 'UNDER',\n            'LAC': 'OVER',\n            'LAL': 'OVER',\n            'MEM': 'UNDER',\n            'MIA': 'OVER',\n            'MIL': 'OVER',\n            'MIN': 'OVER',\n            'NO': 'UNDER',\n            'NY': 'OVER',\n            'OKC': 'OVER',\n            'ORL': 'OVER',\n            'PHI': 'OVER',\n            'PHX': 'UNDER',\n            'POR': 'UNDER',\n            'SAC': 'OVER',\n            'SA': 'UNDER',\n            'TOR': 'UNDER',\n            'UTAH': 'UNDER',\n            'WSH': 'UNDER',\n            'locks': ['CHA', 'MEM', 'WSH']\n        }\n}\n\n\nexport default PICKS;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Cell from './Cell';\nimport PICKS from '../data/picks';\n\nconst Row = ( { team, line } ) => {\n    const { logo, wins, gamesPlayed } = team;\n    const projectedWins = Math.round( 82 * wins / gamesPlayed );\n\n    const applyHighlighting = ( pick ) => {\n        const projWin = { backgroundColor: 'rgba(0, 255, 0, 0.1)' };\n        const projLoss = { backgroundColor: 'rgba(255, 0, 0, 0.1)' };\n        const lockWin = { backgroundColor: 'rgba(0, 255, 0, 0.4)' };\n        const lockLoss = { backgroundColor: 'rgba(255, 0, 0, 0.4)' };\n        if( wins > line ) { return pick === 'OVER' ? lockWin : lockLoss }\n        if( wins + ( 82 - gamesPlayed ) < line ) { return pick ==='UNDER' ? lockWin : lockLoss }\n        if( projectedWins > line ) { return pick === 'OVER' ? projWin : projLoss }\n        if (projectedWins < line ) { return pick === 'UNDER' ? projWin : projLoss }\n    }\n\n    return(\n        <tr>\n            <td><img src={ logo } style={ { width: '30px', height: '30px'} } alt={ team.team }/></td>\n            <td>{ team.team }</td>\n            <td>{ line }</td>\n            <td>{ wins }</td>\n            <td> { projectedWins }</td>\n            {/* <Cell /> */}\n            <td style={ applyHighlighting( PICKS['AD'][team.team] ) }>{ PICKS['AD'][team.team]} </td>\n        </tr>\n    )\n}\n\nRow.propTypes = {\n    team: PropTypes.object.isRequired,\n    line: PropTypes.number.isRequired\n}\n\nexport default Row;","const LINES = {\n    'ATL': 33.5,\n    'BOS': 48.5,\n    'BKN': 43.5,\n    'CHA': 23.5,\n    'CHI': 32.5,\n    'CLE': 24.5,\n    'DAL': 40.5,\n    'DEN': 52.5,\n    'DET': 37.5,\n    'GS': 47.5,\n    'HOU': 53.5,\n    'IND': 46.5,\n    'LAC': 53.5,\n    'LAL': 50.5,\n    'MEM': 27.5,\n    'MIA': 43.5,\n    'MIL': 57.5,\n    'MIN': 35.5,\n    'NO': 39.5,\n    'NY': 26.5,\n    'OKC': 31.5,\n    'ORL': 41.5,\n    'PHI': 54.5,\n    'PHX': 28.5,\n    'POR': 46.5,\n    'SAC': 37.5,\n    'SA': 46.5,\n    'TOR': 46.5,\n    'UTAH': 53.5,\n    'WSH': 26.5,\n}\n\nexport default LINES;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Table from 'react-bootstrap/Table';\nimport Row from './Row';\nimport LINES from '../data/lines';\n\nconst TeamTable = ( { teams } ) => {\n    return(\n        <Table responsive>\n            <thead>\n                <tr>\n                    <th>Logo</th>\n                    <th>Team</th>\n                    <th>Line</th>\n                    <th>Wins</th>\n                    <th>Projected Wins</th>\n                    <th>DOBS</th>\n                </tr>\n            </thead>\n            <tbody>\n                { teams.map( team => {\n                    return(\n                        <Row \n                            key={ team.id }    \n                            team={ team }\n                            line={ LINES[team.team] }\n                        />\n                    )\n                })}\n            </tbody>\n        </Table>\n    );\n}\n\nTeamTable.propTypes = {\n    team: PropTypes.object.isRequired,\n}\n\n\nexport default TeamTable;","import React from 'react';\nimport Card  from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\n\nconst Legend = () => {\n    return(\n        <Accordion defaultActiveKey=\"0\">\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        <h4>Legend</h4>\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body>\n                        <div className=\"container\">\n                            <div className=\"row\" style={{margin: '2px 150px 20px 150px'}}>\n                            <div className=\"col-sm projWin\"><span style={{verticalAlign: 'middle'}}>Projected Win</span></div>\n                            <div className=\"col-sm projLoss\"><span style={{verticalAlign: 'middle'}}>Projected Loss</span></div>\n                            <div className=\"col-sm win\"><span style={{verticalAlign: 'middle'}}>Win</span></div>\n                            <div className=\"col-sm loss\"><div>Loss</div></div>\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n        </Accordion>  \n    )\n}\n\nexport default Legend;","import React, { Component } from 'react';\nimport TeamTable from './TeamTable';\nimport Legend from './Legend';\n\nclass Picks extends Component {\n    state = {\n        teams: [],\n        loaded: false\n    };\n\n    componentDidMount() {\n        fetch('https://site.api.espn.com/apis/site/v2/sports/basketball/nba/teams?limit=30')\n        .then( response => response.json() )\n        .then( json => {\n            const teamData = json.sports[0].leagues[0].teams;\n            let teams = [];\n            teamData.map( ( team, i ) => {\n                return(\n                    teams.push( {\n                    id: i,\n                    team: team.team.abbreviation,\n                    wins: team.team.record.items[0].stats[1].value,\n                    gamesPlayed: team.team.record.items[0].stats[8].value,\n                    logo: team.team.logos[0].href\n                } )\n                );\n            } );\n            this.setState( { teams, loaded: true } );\n        } )\n        .catch( error => {\n            alert( 'Error: ', error )\n        });\n    }\n\n    render(){\n        const { teams, loaded } = this.state;\n        if( loaded ){\n            console.log(teams);\n            return(\n                <div className=\"container\">\n                    <h2>NBA Picks</h2>\n                    <Legend />\n                    <TeamTable teams={ teams }/>\n                    <p>Results</p>\n                </div>\n                \n            )\n        } else {\n            return(\n                <div>Loading...</div>\n            )\n        }\n    }\n}\n\nexport default Picks;","import React from 'react';\nimport './App.css';\nimport Picks from './components/Picks';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Picks />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}